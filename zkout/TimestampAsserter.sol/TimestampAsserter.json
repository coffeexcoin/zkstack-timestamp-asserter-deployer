{"abi":[{"type":"function","name":"assertTimestampInRange","inputs":[{"name":"_start","type":"uint256","internalType":"uint256"},{"name":"_end","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"error","name":"TimestampOutOfRange","inputs":[{"name":"currentTimestamp","type":"uint256","internalType":"uint256"},{"name":"start","type":"uint256","internalType":"uint256"},{"name":"end","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"00020000000000020000008003000039000000400030043f00000000030100190000006003300270000000130330019700000001022001900000002d0000c13d000000040230008c000000350000413d000000000201043b0000001502200197000000160220009c000000350000c13d000000440230008c000000350000413d0000000002000416000000000202004b000000350000c13d0000002402100370000000000202043b000200000002001d0000000401100370000000000101043b000100000001001d000000170100004100000000001004390000000001000414000000130210009c0000001301008041000000c00110021000000018011001c70000800b02000039004500400000040f0000000102200190000000370000613d000000000101043b0000000104000029000000000241004b0000000203000029000000380000413d000000000231004b000000380000213d0000000001000019000000460001042e0000000001000416000000000101004b000000350000c13d0000002001000039000001000010044300000120000004430000001401000041000000460001042e00000000010000190000004700010430000000000001042f0000001902000041000000800020043f000000840010043f000000a40040043f000000c40030043f0000001a010000410000004700010430000000000001042f00000043002104230000000102000039000000000001042d0000000002000019000000000001042d0000004500000432000000460001042e0000004700010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000005b1a0c9100000000000000000000000000000000000000000000000000000000796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d9553913202000002000000000000000000000000000000040000000000000000000000003d5740d90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000640000008000000000000000000000000000000000000000000000000000000000000000000000000000000000d278a3574a650143f74bef47c9160bc1baacb7ebfacd6c616956254c438a403e","is_unlinked":false,"missing_libraries":[]},"assembly":"\t.text\n\t.file\t\"TimestampAsserter.sol:TimestampAsserter\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2 + r0]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI0_4[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_9\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r4\n\tsub!\tr1, r4, r2\n\tadd\tstack-[2], r0, r3\n\tjump.lt\t@.BB0_12\n\tsub!\tr1, r3, r2\n\tjump.gt\t@.BB0_12\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_9:\n\trevert\n.BB0_12:\n\tadd\t@CPI0_6[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tst.1\t164, r4\n\tst.1\t196, r3\n\tadd\t@CPI0_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__cxa_throw:\n.func_begin1:\n\trevert\n.func_end1:\n\n__staticcall:\n.func_begin2:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB2_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell\t4294967295\nCPI0_1:\n\t.cell\t53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell\t-26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell\t41206493974909907558149883756113880568280456533626792654333771536860650143744\nCPI0_4:\n\t.cell\t54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_5:\n\t.cell\t904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_6:\n\t.cell\t27745247020289590495217751921283509066927792682872403095427340979931755577344\nCPI0_7:\n\t.cell\t7922816253787617000789217640448\n","metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"TimestampOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"assertTimestampInRange\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matter Labs\",\"custom:security-contact\":\"security@matterlabs.dev\",\"details\":\"A contract that verifies if the current block timestamp falls within a specified range. This is useful for custom account abstraction where time-bound checks are needed but accessing block.timestamp directly is not possible.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TimestampAsserter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TimestampAsserter.sol\":\"TimestampAsserter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/ITimestampAsserter.sol\":{\"keccak256\":\"0xa7a011314b5862890bec9d3dc19c2cacea27b791e0042644217e9fe981416616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ee1aa077d5d87332e997dc4a6a136754cb57c53deb96cdf56adeb5dfd935df\",\"dweb:/ipfs/QmZXMiy8AbaseKoHWkbe59jogp2CjWYywdcTkyH5BrWTzh\"]},\"src/TimestampAsserter.sol\":{\"keccak256\":\"0x98d2a7fb5dc1b9b123a0a989a0964faf804407f1f2d8e12a8884fba435222cd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a123f5cc0b5f73c3bc39c94a0cade5b096639e0a4492c088d188bcc364ddec\",\"dweb:/ipfs/Qmc573jgEbq1KEvZtZ3puQsJuwb9owPUed12JyGuxo4UYQ\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.5.0"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 20:\"src/ITimestampAsserter.sol\", 21:\"src/TimestampAsserter.sol\"\nobject \"TimestampAsserter_36572\" {\n    code {\n        {\n            /// @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"TimestampAsserter_36572_deployed\")\n            codecopy(_1, dataoffset(\"TimestampAsserter_36572_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 21:\"src/TimestampAsserter.sol\"\n    object \"TimestampAsserter_36572_deployed\" {\n        code {\n            {\n                /// @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    if eq(0x5b1a0c91, shr(224, calldataload(0)))\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let value_1 := calldataload(36)\n                        /// @src 21:694:744  \"block.timestamp < _start || block.timestamp > _end\"\n                        let expr := /** @src 21:694:718  \"block.timestamp < _start\" */ lt(/** @src 21:694:709  \"block.timestamp\" */ timestamp(), /** @src 21:694:718  \"block.timestamp < _start\" */ value)\n                        /// @src 21:694:744  \"block.timestamp < _start || block.timestamp > _end\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 21:722:744  \"block.timestamp > _end\" */ gt(/** @src 21:694:709  \"block.timestamp\" */ timestamp(), /** @src 21:722:744  \"block.timestamp > _end\" */ value_1)\n                        }\n                        /// @src 21:690:828  \"if (block.timestamp < _start || block.timestamp > _end) {...\"\n                        if expr\n                        {\n                            /// @src 21:767:817  \"TimestampOutOfRange(block.timestamp, _start, _end)\"\n                            mstore(_1, shl(224, 0x3d5740d9))\n                            /// @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\"\n                            mstore(/** @src 21:767:817  \"TimestampOutOfRange(block.timestamp, _start, _end)\" */ add(_1, /** @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\" */ 4), /** @src 21:694:709  \"block.timestamp\" */ timestamp())\n                            /// @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\"\n                            mstore(add(/** @src 21:767:817  \"TimestampOutOfRange(block.timestamp, _start, _end)\" */ _1, /** @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\" */ 36), value)\n                            mstore(add(/** @src 21:767:817  \"TimestampOutOfRange(block.timestamp, _start, _end)\" */ _1, /** @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\" */ 68), value_1)\n                            /// @src 21:767:817  \"TimestampOutOfRange(block.timestamp, _start, _end)\"\n                            revert(_1, /** @src 21:549:836  \"contract TimestampAsserter is ITimestampAsserter {...\" */ 100)\n                        }\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ae9ba82b034895cfe048195b9f103bd2fc91ecbe9c176ed0f19e0f3fefa1f7b464736f6c63430008180033\"\n    }\n}\n","hash":"0100001db47a1914d4ff9b7a6d55b20eb2ae63d6f0633aca27196109fa3c5baa","factoryDependencies":{},"id":21}